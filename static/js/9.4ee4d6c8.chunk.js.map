{"version":3,"sources":["components/Modal/ModalCreateCollection.tsx","components/Create/Create.tsx","views/Create/Create.tsx","utils/symbol.ts","utils/decimal.ts"],"names":["client","require","create","host","port","protocol","ModalCreateCollection","dispatch","useDispatch","account","useWallet","useState","previewCollectionImage","setPreviewCollectionImage","collectionName","setCollectionName","collectionSymbol","setCollectionSymbol","collectionDescription","setCollectionDescription","collectionFile","setCollectionFile","marketplaceContract","useKaiECOMarketplaceContract","getKaiECOMarketplaceAddress","kaiECO721ContractABI","KaiECOToken721Data","abi","kaiECO721ByteCode","bytecode","kaiECO721CollectionContract","useKaiCollectionContract","handleCreateCollection","a","toast","warning","position","autoClose","theme","pauseOnHover","console","log","type","payload","add","file","error","deploy","data","arguments","send","from","on","transactionHash","success","receipt","collectionUri","path","collectionAddress","contractAddress","methods","addCollection","stop","e","id","className","onClick","viewBox","fill","width","height","d","stroke","strokeWidth","src","htmlFor","onChange","event","target","files","URL","createObjectURL","value","name","placeholder","required","Create","history","useHistory","setName","previewImage","setPreviewImage","image","setImage","description","setDescription","price","setPrice","tokens","Nutgain","address","token","setToken","collection","setCollection","mintContract","setMintContract","kaiECOMarketplaceAddress","kaiECOMarketplaceContract","getKaiECO721Address","web3","useWeb3","myCollections","useSelector","state","marketplace","collections","filter","m","creator","onSubmit","mintNFT","val","info","contractResult","tokenId","events","Transfer","returnValues","approve","decimals","decimal","tokenPrice","getDecimalAmount","BigNumber","_bnb","bnb","createItemOrder","hash","temp","symbol","marketplaceService","putHistory","PadWalletAddress","push","alt","map","item","idx","style","border","getMintContract","setMyCollection","parseFloat","busd","cols","rows","defaultValue","Breadcrumb","title","subpage","page"],"mappings":"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","file":"static/js/9.4ee4d6c8.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport KaiECOToken721Data from 'abis/KaiECOToken721.json';\r\nimport { useKaiCollectionContract, useKaiECOMarketplaceContract } from 'hooks/useContract';\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { collectionService } from 'services';\r\nimport { DEFAULT_SITE_URL } from 'constants/keyConstants';\r\nimport { connect, useDispatch } from 'react-redux';\r\nimport { actionConstants } from 'constants/actionConstants';\r\nimport { getKaiECOMarketplaceAddress } from 'utils/addressHelpers';\r\nconst ipfsClient = require('ipfs-http-client');\r\nconst client = ipfsClient.create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n\r\n\r\nfunction ModalCreateCollection() {\r\n\r\n    const dispatch = useDispatch();\r\n    const { account } = useWallet();\r\n    const [previewCollectionImage, setPreviewCollectionImage] = useState(null);\r\n    const [collectionName, setCollectionName] = useState('');\r\n    const [collectionSymbol, setCollectionSymbol] = useState('');\r\n    const [collectionDescription, setCollectionDescription] = useState('');\r\n    const [collectionFile, setCollectionFile] = useState(null);\r\n    const [collection , setCollection] = useState(null);\r\n    const handlePreviewCollectionImage = (event) => {\r\n        console.log(event);\r\n        if (event.target.files && event.target.files[0]) {\r\n            setPreviewCollectionImage(URL.createObjectURL(event.target.files[0]));\r\n            setCollectionFile(event.target.files[0]);\r\n        }\r\n    }\r\n    const marketplaceContract = useKaiECOMarketplaceContract(getKaiECOMarketplaceAddress());\r\n    const kaiECO721ContractABI = KaiECOToken721Data.abi;\r\n    const kaiECO721ByteCode = KaiECOToken721Data.bytecode;\r\n    const kaiECO721CollectionContract = useKaiCollectionContract(kaiECO721ContractABI);\r\n    const handleCollectionValidation = () => {\r\n        if (collectionFile === null || collectionName === '' || collectionSymbol === '' || collectionDescription === '' ) {\r\n            toast.warning('Check the Inputs', {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                theme: 'dark',\r\n                pauseOnHover: false\r\n            })\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n    const handleCreateCollection = async() => {\r\n        if (!handleCollectionValidation()) {\r\n            return;\r\n        }\r\n\r\n        console.log(account);\r\n\r\n\r\n        dispatch({ type: 'CHANGE_LOAD', payload: true })\r\n        const file = await client.add(collectionFile);\r\n        console.log(file);\r\n        if (!file) {\r\n            console.error(\"IPFS Server Error\")\r\n            return;\r\n        }\r\n\r\n\r\n    \r\n        try{\r\n            kaiECO721CollectionContract.deploy({\r\n                data: kaiECO721ByteCode,\r\n                arguments: [collectionName, collectionSymbol]\r\n            }).send({ from: account })\r\n                .on('error', function (error) {\r\n                    toast.error(error, {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        theme: 'dark',\r\n                        pauseOnHover: false\r\n                    });\r\n                    dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n                }).on('transactionHash', function (transactionHash) {\r\n                    toast.success(transactionHash, {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        theme: 'dark',\r\n                        pauseOnHover: false\r\n                    });\r\n                    \r\n                }).on('receipt', async(receipt) => {\r\n                    \r\n                    // const metadata = {\r\n                    //     name : collectionName,\r\n                    //     symbol : collectionSymbol,\r\n                    //     description : collectionDescription,\r\n                    //     image : file.path,\r\n                    //     owner : account,\r\n                    //     address : receipt.contractAddress\r\n                    // };\r\n            \r\n                    // const meta = await client.add(JSON.stringify(metadata));\r\n                    // let result = await marketplaceContract.methods.CreateCollection(meta.path, account).call({from: account});\r\n                    // console.log(result);\r\n                    let collectionUri = file.path;\r\n                    let collectionAddress = receipt.contractAddress;\r\n                    await marketplaceContract.methods.addCollection(collectionUri, collectionName, collectionSymbol, collectionDescription, collectionAddress, account, 10, 10).send({from : account});\r\n                    //collectionService.createCollection(file.path, collectionName, collectionSymbol, collectionDescription, DEFAULT_SITE_URL + collectionUrl, account, receipt.contractAddress).then(result => setCollection(result));\r\n                    //dispatch({type: actionConstants.ADD_MYCOLLECTION, payload : collection});\r\n                    setCollectionDescription('');\r\n                    setCollectionFile(null);\r\n                    setCollectionName('');\r\n                    setCollectionSymbol('');\r\n                    setPreviewCollectionImage(null);\r\n                    dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n                });\r\n                client.stop();\r\n        }catch(e){\r\n            dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n        }\r\n       \r\n        \r\n    }\r\n    return (\r\n        <div id=\"create_collection\" className=\"modal fade p-0\" >\r\n            <div className=\"modal-dialog dialog-animated\">\r\n                <div className=\"modal-content h-100\">\r\n                    <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                        Create Collection <i className=\"far fa-times-circle icon-close\" />\r\n                    </div>\r\n                    <div className=\"menu modal-body\">\r\n                        <div className=\"row align-self-center\">\r\n                            <div className='col-12'>\r\n                                <div className=\"file-uploader\">\r\n                                    {\r\n                                        previewCollectionImage ?\r\n                                            <div className=\"active\">\r\n                                                <button onClick={() => setPreviewCollectionImage(null)}>\r\n                                                    <svg viewBox=\"0 0 16 16\" fill=\"none\" width=\"13.200000000000001\" height=\"13.200000000000001\" ><path d=\"M4 12L12 4\" stroke=\"currentColor\" strokeWidth={'2'}></path><path d=\"M12 12L4 4\" stroke=\"currentColor\" strokeWidth={'2'}></path></svg>\r\n                                                </button>\r\n                                                <img src={previewCollectionImage} />\r\n                                            </div>\r\n                                            : <div className=\"normal\">\r\n                                                <label htmlFor=\"collectionFile\">Choose File</label>\r\n                                                <input type=\"file\" id=\"collectionFile\" onChange={handlePreviewCollectionImage} />\r\n                                                <p>PNG, GIF, WEBP, MP4 or<br /> MP3. Max 30mb</p>\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" value={collectionName} name=\"name\" placeholder=\"Collection Name\" required={true} onChange={e => setCollectionName(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" value={collectionSymbol} name=\"symbol\" placeholder=\"Collection Symbol\" required={true} onChange={e => setCollectionSymbol(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <div className=\"form-group\">\r\n                                    <input type=\"text\" className=\"form-control\" name=\"textarea\" value={collectionDescription} placeholder=\"Collection Description\"   onChange={e => setCollectionDescription(e.target.value)} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-12\">\r\n                                <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"button\" onClick={handleCreateCollection} >Create Collection</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ModalCreateCollection\r\n","import { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector, RootStateOrAny } from 'react-redux';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\r\nimport { useKaiECOMarketplaceContract } from 'hooks/useContract';\r\nimport useWeb3 from 'hooks/useWeb3';\r\nimport { getKaiECO721Address, getKaiECOMarketplaceAddress } from 'utils/addressHelpers';\r\nimport ModalCreateCollection from 'components/Modal/ModalCreateCollection';\r\nimport { getMintContract } from 'utils/contractHelpers';\r\nimport { marketplaceService } from 'services';\r\n\r\nimport { tokens } from 'constants/tokens';\r\nimport { PadWalletAddress } from 'utils/padwallet';\r\nimport { symbol } from 'utils/symbol';\r\nimport { decimal } from 'utils/decimal';\r\nimport { getDecimalAmount } from 'utils/formatBalance';\r\nimport BigNumber from 'bignumber.js';\r\n// import BigNumber from 'bignumber.js'\r\n// import {  getDecimalAmount } from 'utils/formatBalance';\r\n\r\n\r\n\r\nconst ipfsClient = require('ipfs-http-client');\r\nconst client = ipfsClient.create({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' });\r\n\r\n\r\n\r\nfunction Create() {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [previewImage, setPreviewImage] = useState(null);\r\n    const [image, setImage] = useState(null);\r\n    const [description, setDescription] = useState('');\r\n    const [auctionTime, setAuctionTime] = useState(0);\r\n    const [price, setPrice] = useState(0);\r\n    const [token, setToken] = useState(tokens.Nutgain.address);\r\n    const { account } = useWallet()\r\n    const [collection, setCollection] = useState(null);\r\n    const [mintContract, setMintContract] = useState(null);\r\n\r\n    const kaiECOMarketplaceAddress = getKaiECOMarketplaceAddress();\r\n    const kaiECO721Address = getKaiECO721Address();\r\n    //const kaiECO721Contract = useKaiECOERC721Contract(kaiECO721Address);\r\n    const kaiECOMarketplaceContract = useKaiECOMarketplaceContract(getKaiECOMarketplaceAddress());\r\n    const web3 = useWeb3();\r\n\r\n    const myCollections = useSelector((state: RootStateOrAny) => state.marketplace.collections)?.filter(m => m.creator === account);\r\n\r\n    const validateForm = () => {\r\n\r\n        if (previewImage === null || previewImage === \"\") {\r\n            toast.error(\"Please Insert Image!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                theme: 'dark',\r\n                pauseOnHover: false\r\n            });\r\n            return false;\r\n        }\r\n        if (collection === null) {\r\n            toast.error(\"Please Select the Collection!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                theme: 'dark',\r\n                pauseOnHover: false\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if (price <= 0) {\r\n            toast.error(\"Please Insert Price!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                theme: 'dark',\r\n                pauseOnHover: false\r\n            });\r\n            return false;\r\n        }\r\n\r\n\r\n\r\n        if (name === null || name === \"\") {\r\n            toast.error(\"Please Insert Name!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                theme: 'dark',\r\n                pauseOnHover: false\r\n            });\r\n            return false;\r\n        }\r\n\r\n        if (description === null || description === \"\") {\r\n            toast.error(\"Please Insert Description!\", {\r\n                position: \"top-right\",\r\n                autoClose: 3000,\r\n                theme: 'dark',\r\n                pauseOnHover: false\r\n            });\r\n            return false;\r\n        }\r\n\r\n\r\n        return true;\r\n    }\r\n\r\n    const setTime = (timeByAuction) => {\r\n        setAuctionTime(new Date(timeByAuction).getTime() / 1000);\r\n    }\r\n    const onSubmit = async () => {\r\n        console.log(token);\r\n        if (validateForm() === false) return;\r\n\r\n        dispatch({ type: 'CHANGE_LOAD', payload: true })\r\n        try {\r\n\r\n            const file = await client.add(image);\r\n            console.log(file);\r\n            if (!file) {\r\n                console.error(\"IPFS Server Error\")\r\n                dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n                return;\r\n            }\r\n            \r\n            let contractResult = await mintContract.methods.mintNFT(file.path, name, description).send({ from: account })\r\n                .on('transactionHash', (val) => {\r\n                    toast.info(\"Mint Success!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        theme: 'dark',\r\n                        pauseOnHover: false\r\n                    });\r\n                })\r\n                .on('error', (e) => {\r\n                    toast.error(\"Mint Fail!\", {\r\n                        position: \"top-right\",\r\n                        autoClose: 3000,\r\n                        theme: 'dark',\r\n                        pauseOnHover: false\r\n                    });\r\n                    dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n                    console.log(e);\r\n                })\r\n\r\n            const tokenId = contractResult.events.Transfer.returnValues[2];\r\n            console.log(\"TOkenID\", tokenId)\r\n\r\n            if (tokenId > 0) {\r\n                await mintContract.methods.approve(kaiECOMarketplaceAddress, tokenId).send({ from: account });\r\n                \r\n                let decimals = decimal(token);\r\n                let tokenPrice = getDecimalAmount(new BigNumber(price), decimals);\r\n                //console.log(tokenPrice);\r\n                let _bnb = false;\r\n                if(token == tokens.bnb.address){\r\n                    _bnb = true;\r\n                }\r\n                kaiECOMarketplaceContract.methods.createItemOrder(collection,  tokenId, token, tokenPrice, _bnb).send({ from: account })\r\n                    .on('error', (error) => {\r\n                        toast.error(error, {\r\n                            position: \"top-right\",\r\n                            autoClose: 3000,\r\n                            theme: 'dark',\r\n                            pauseOnHover: false\r\n                        });\r\n                        dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n                    })\r\n                    .on('transactionHash', (hash) => {\r\n\r\n                        toast.success(hash, {\r\n                            position: \"top-right\",\r\n                            autoClose: 3000,\r\n                            theme: 'dark',\r\n                            pauseOnHover: false\r\n                        });\r\n                    })\r\n                    .on('receipt', async (receipt) => {\r\n                        console.log(receipt);\r\n                        \r\n                        let temp = symbol(token);\r\n\r\n                        await marketplaceService.putHistory(collection,tokenId, `Create the the Item with ${price} ${temp} by ${PadWalletAddress(account)}`)\r\n                        //dispatch(createMyToken(marketId, tokenId, file.path, name, description, price, auctionTime, collection, account, account))\r\n                        //marketplaceService.putOnSale(tokenId, file.path, name, description, price, auctionTime, collection, account, account).then(result => {console.log(result)})\r\n                        dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n                        history.push('/')\r\n                    })\r\n            } else {\r\n                toast.error(\"Put Sale Fail!\", {\r\n                    position: \"top-right\",\r\n                    autoClose: 3000,\r\n                    theme: 'dark',\r\n                    pauseOnHover: false\r\n                });\r\n                dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n            }\r\n            client.stop();\r\n        } catch (e) {\r\n            dispatch({ type: 'CHANGE_LOAD', payload: false })\r\n            console.log(e);\r\n        }\r\n    }\r\n    const handleUpload = (event) => {\r\n        if (event.target.files && event.target.files[0]) {\r\n            setPreviewImage(URL.createObjectURL(event.target.files[0]));\r\n            setImage(event.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const setMyCollection = (item) => {\r\n\r\n        setCollection(item);\r\n        setMintContract(getMintContract(item, web3));\r\n\r\n    }\r\n    return (\r\n        <section className=\"author-area\">\r\n            <ModalCreateCollection />\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-12 col-md-4\">\r\n                        {/* Author Profile */}\r\n                        <div className='card no-hover text-center'>\r\n                            <div className='image-over'>\r\n                                <img className='card-img-top' src={ previewImage === null? \"/img/user.jpg\": previewImage} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"card-caption col-12 p-0\">\r\n                                <div className=\"card-body mt-4\">\r\n                                    <h5 className=\"mb-3\">{name}</h5>\r\n                                    <p className=\"my-3\">{description}</p>\r\n                                    <p className=\"my-3\">{price} {symbol(token)}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-12 col-md-7\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro mt-5 mt-lg-0 mb-4 mb-lg-5\">\r\n                            <div className=\"intro-content\">\r\n                                <h3 className=\"mt-3 mb-0\">Create Item</h3>\r\n                            </div>\r\n                        </div>\r\n                        {/* Item Form */}\r\n                        <div className='item-from card'>\r\n                            <div className=\"row\">\r\n                                <div className='col-12'>\r\n                                    <div className=\"file-uploader\">\r\n                                        {\r\n                                            previewImage ?\r\n                                                <div className=\"active\">\r\n                                                    <button onClick={() => setPreviewImage(null)}>\r\n                                                        <svg viewBox=\"0 0 16 16\" fill=\"none\" width=\"13.200000000000001\" height=\"13.200000000000001\" ><path d=\"M4 12L12 4\" stroke=\"currentColor\" strokeWidth={'2'}></path><path d=\"M12 12L4 4\" stroke=\"currentColor\" strokeWidth={'2'}></path></svg>\r\n                                                    </button>\r\n                                                    <img src={previewImage} />\r\n                                                </div>\r\n                                                : <div className=\"normal\">\r\n                                                    <label htmlFor=\"file\">Choose File</label>\r\n                                                    <input type=\"file\" id=\"file\" onChange={handleUpload} />\r\n                                                    <p>PNG, GIF, WEBP, MP4 or<br /> MP3. Max 30mb</p>\r\n                                                </div>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className='col-12'>\r\n                                    <div className='collection'>\r\n                                        <div className='item-detail' data-toggle=\"modal\" data-target=\"#create_collection\">\r\n\r\n                                            <p className=\"name\">Create</p>\r\n                                            <p className=\"symbol\">ERC-721</p>\r\n                                        </div>\r\n                                        {myCollections?.map((item, idx) => {\r\n                                            return (\r\n                                                <div className='item-detail' style={{ border: item.address === collection && '2px solid rgb(0, 102, 255)' }} key={`collection_${idx}`} onClick={() => setMyCollection(item.address)} >\r\n\r\n                                                    <p className=\"name\">{item.name}</p>\r\n                                                    <p className=\"symbol\">{item.symbol}</p>\r\n                                                </div>\r\n                                            );\r\n                                        })\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-8\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"number\" className=\"form-control\" name=\"price\" placeholder=\"Item Price\" required={true} onChange={e => setPrice(parseFloat(e.target.value))} />\r\n                                    </div>\r\n\r\n                                </div>\r\n                                <div className='col-4'>\r\n                                    <div className='form-group'>\r\n                                        <select className='form-control' name='token' onChange={e => setToken(e.target.value)}>\r\n                                            <option value={tokens.Nutgain.address}>{tokens.Nutgain.symbol}</option>\r\n                                            <option value={tokens.bnb.address}>{tokens.bnb.symbol}</option>\r\n                                            <option value={tokens.busd.address}>{tokens.busd.symbol}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"text\" className=\"form-control\" name=\"name\" placeholder=\"Item Name\" required={true} onChange={e => setName(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <textarea className=\"form-control\" name=\"textarea\" placeholder=\"Description\" cols={30} rows={3} defaultValue={\"\"} onChange={e => setDescription(e.target.value)} />\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"col-12\">\r\n                                    <button className=\"btn w-100 mt-3 mt-sm-4\" type=\"button\" onClick={() => onSubmit()}>Create Item</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Create;\r\n","import React, { useEffect } from 'react';\r\n\r\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\r\nimport Creates from '../../components/Create/Create';\r\n\r\nconst Create = () => {\r\n\r\n    return (\r\n        <>\r\n            <Breadcrumb title=\"Create New Item\" subpage=\"Pages\" page=\"Create\" />\r\n            <Creates />\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\nexport default Create;","import { tokens } from \"constants/tokens\"\r\n\r\nexport const symbol = (address) => {\r\n    if(tokens.busd.address === address){\r\n        return tokens.busd.symbol;\r\n    }else if(tokens.Nutgain.address === address){\r\n        return tokens.Nutgain.symbol;\r\n    }else{\r\n        return tokens.bnb.symbol\r\n    }\r\n}","import { tokens } from \"constants/tokens\"\r\n\r\nexport const decimal = (address) => {\r\n    if(tokens.busd.address === address){\r\n        return tokens.busd.decimal;\r\n    }else if(tokens.Nutgain.address === address){\r\n        return tokens.Nutgain.decimal;\r\n    }else{\r\n        return tokens.bnb.decimal\r\n    }\r\n}"],"sourceRoot":""}