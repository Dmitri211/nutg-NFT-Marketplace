{"version":3,"sources":["components/Explore/Explore.tsx","views/Explores/Explores.tsx","utils/symbol.ts","utils/decimal.ts"],"names":["initData","pre_heading","heading","btn_1","btn_2","Explore","useState","contents","exploreData","useSelector","state","marketplace","items","filter","m","auctionTime","Date","getTime","toFixed","className","href","map","item","idx","to","contract","tokenId","src","image","alt","name","owner","PadWalletAddress","getBalanceNumber","price","decimal","token","symbol","Explores","props","Breadcrumb","title","subpage","page","address","tokens","busd","Nutgain","bnb"],"mappings":"sPAaMA,EAAW,CACbC,YAAa,mBACbC,QAAS,UACTC,MAAO,WACPC,MAAO,aA6EIC,EAxEC,WAIZ,MAAgCC,mBAASN,GAAzC,mBAAOO,EAAP,KACMC,GADN,KACoBC,aAAY,SAACC,GAAD,OAA2BA,EAAMC,YAAYC,SAAOC,QAAO,SAAAC,GAAC,OAAIA,EAAEC,cAAe,IAAIC,MAAOC,UAAY,KAAMC,cAC9I,EAAkCZ,mBAAS,MAA3C,6BAEA,OACI,0BAASa,UAAU,qBAAnB,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SAEI,sBAAKA,UAAU,2DAAf,UACI,sBAAKA,UAAU,gBAAf,UACI,+BAAOZ,EAASN,cAChB,oBAAIkB,UAAU,YAAd,SAA2BZ,EAASL,aAExC,qBAAKiB,UAAU,YAAf,SACI,mBAAGA,UAAU,kBAAkBC,KAAK,aAApC,SAAkDb,EAASJ,iBAK3E,qBAAKgB,UAAU,YAAf,SACKX,EAAYa,KAAI,SAACC,EAAMC,GACpB,OACI,qBAAwBJ,UAAU,gCAAlC,SACI,sBAAKA,UAAU,OAAf,UACI,qBAAKA,UAAU,aAAf,SACI,cAAC,IAAD,CAAMK,GAAE,iBAAYF,EAAKG,SAAjB,YAA6BH,EAAKI,SAA1C,SACI,qBAAKP,UAAU,eAAeQ,IAAKL,EAAKM,MAAOC,IAAI,SAI3D,qBAAKV,UAAU,0BAAf,SAEI,sBAAKA,UAAU,YAAf,UACI,cAAC,IAAD,CAAMK,GAAE,iBAAYF,EAAKG,SAAjB,YAA6BH,EAAKI,SAA1C,SACI,oBAAIP,UAAU,OAAd,SAAsBG,EAAKQ,SAE/B,sBAAKX,UAAU,wCAAf,UACI,4CACA,cAAC,IAAD,CAAMK,GAAE,gBAAWF,EAAKS,OAAxB,SACI,oBAAIZ,UAAU,YAAd,SAA2Ba,YAAiBV,EAAKS,cAIzD,sBAAKZ,UAAU,6CAAf,UACI,iCAAQc,YAAiBX,EAAKY,MAAOC,YAAQb,EAAKc,QAAlD,IAA6DC,YAAOf,EAAKc,UACzE,+BAAO,gBAvB3B,cAAiBb,YAuCjC,cAAC,IAAD,QC7EGe,MATf,SAAkBC,GACd,OACI,qCACI,cAACC,EAAA,EAAD,CAAYC,MAAM,UAAUC,QAAQ,QAAQC,KAAK,UACjD,cAAC,EAAD,S,iCCPZ,+CAEaN,EAAS,SAACO,GACnB,OAAGC,IAAOC,KAAKF,UAAYA,EAChBC,IAAOC,KAAKT,OACdQ,IAAOE,QAAQH,UAAYA,EACzBC,IAAOE,QAAQV,OAEfQ,IAAOG,IAAIX,S,iCCR1B,+CAEaF,EAAU,SAACS,GACpB,OAAGC,IAAOC,KAAKF,UAAYA,EAChBC,IAAOC,KAAKX,QACdU,IAAOE,QAAQH,UAAYA,EACzBC,IAAOE,QAAQZ,QAEfU,IAAOG,IAAIb","file":"static/js/13.41201912.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { PadWalletAddress } from 'utils/padwallet';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useKaiECOMarketplaceContract } from 'hooks/useContract';\r\nimport { getKaiECOMarketplaceAddress } from 'utils/addressHelpers';\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\r\nimport { symbol } from 'utils/symbol';\r\nimport { getBalanceNumber } from 'utils/formatBalance';\r\nimport { decimal } from 'utils/decimal';\r\n\r\nconst initData = {\r\n    pre_heading: \"Exclusive Assets\",\r\n    heading: \"Explore\",\r\n    btn_1: \"View All\",\r\n    btn_2: \"Load More\"\r\n}\r\n\r\n\r\n\r\nconst Explore = () => {\r\n    \r\n    \r\n   \r\n    const [contents, setContents] = useState(initData);\r\n    const exploreData = useSelector((state: RootStateOrAny) => state.marketplace.items).filter(m => m.auctionTime < (new Date().getTime() / 1000).toFixed());\r\n    const [tokenData, setTokenData] = useState(null);\r\n    \r\n    return (\r\n        <section className=\"live-auctions-area\">\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{contents.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{contents.heading}</h3>\r\n                            </div>\r\n                            <div className=\"intro-btn\">\r\n                                <a className=\"btn content-btn\" href=\"/explore-3\">{contents.btn_1}</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {exploreData.map((item, idx) => {\r\n                        return (\r\n                            <div key={`exo_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/token/${item.contract}/${item.tokenId}`}>\r\n                                            <img className=\"card-img-top\" src={item.image} alt=\"\" />\r\n                                        </Link>\r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            <Link to={`/token/${item.contract}/${item.tokenId}`}>\r\n                                                <h5 className=\"mb-0\">{item.name}</h5>\r\n                                            </Link>\r\n                                            <div className=\"seller d-flex align-items-center my-3\">\r\n                                                <span>Owned By</span>\r\n                                                <Link to={`/user/${item.owner}`}>\r\n                                                    <h6 className=\"ml-2 mb-0\">{PadWalletAddress(item.owner)}</h6>\r\n                                                </Link>\r\n                                                \r\n                                            </div>\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{ getBalanceNumber(item.price, decimal(item.token)) } {symbol(item.token)}</span>\r\n                                                <span>{1}</span>\r\n                                            </div>\r\n                                           \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" href=\"#\">{contents.btn_2}</a>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    );\r\n}\r\n\r\nexport default Explore;","import React from 'react'\r\nimport Breadcrumb from '../../components/Breadcrumb/Breadcrumb';\r\nimport Explore from '../../components/Explore/Explore';\r\nfunction Explores(props) {\r\n    return (\r\n        <>\r\n            <Breadcrumb title=\"Explore\" subpage=\"Pages\" page=\"Login\" />\r\n            <Explore />\r\n            \r\n        </>\r\n    )\r\n}\r\nexport default Explores;","import { tokens } from \"constants/tokens\"\r\n\r\nexport const symbol = (address) => {\r\n    if(tokens.busd.address === address){\r\n        return tokens.busd.symbol;\r\n    }else if(tokens.Nutgain.address === address){\r\n        return tokens.Nutgain.symbol;\r\n    }else{\r\n        return tokens.bnb.symbol\r\n    }\r\n}","import { tokens } from \"constants/tokens\"\r\n\r\nexport const decimal = (address) => {\r\n    if(tokens.busd.address === address){\r\n        return tokens.busd.decimal;\r\n    }else if(tokens.Nutgain.address === address){\r\n        return tokens.Nutgain.decimal;\r\n    }else{\r\n        return tokens.bnb.decimal\r\n    }\r\n}"],"sourceRoot":""}