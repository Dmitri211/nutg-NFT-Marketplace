{"version":3,"sources":["components/Collection/Collection.tsx","views/Collection/Collection.tsx","utils/symbol.ts","utils/decimal.ts"],"names":["initData","pre_heading","heading","content","btnText","Collection","collection","useParams","useState","auctions","setAuction","KaiECO721Contract","useDispatch","useWallet","account","useKaiECOERC721Contract","marketplaceContract","useKaiECOMarketplaceContract","getKaiECOMarketplaceAddress","contents","setBidPrice","useEffect","loadData","a","methods","viewItemsByCollection","call","tokens","console","log","Promise","all","itemInfo","map","item","index","getTokenData","tokenIds","token","asset","id","price","seller","contract","coin","uri","collectionId","name","description","assets","interval","setInterval","clearInterval","className","type","placeholder","required","onChange","e","parseInt","target","value","idx","to","src","alt","href","PadWalletAddress","getBalanceNumber","decimal","symbol","props","Breadcrumb","title","subpage","page","address","busd","Nutgain","bnb"],"mappings":"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","file":"static/js/12.9fa0e069.chunk.js","sourcesContent":["import React, {  useEffect, useState } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { PadWalletAddress } from 'utils/padwallet';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useKaiECOERC721Contract, useKaiECOMarketplaceContract } from 'hooks/useContract';\r\nimport { getKaiECOMarketplaceAddress } from 'utils/addressHelpers';\r\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\r\nimport CountDown from 'components/CountDown/CountDown';\r\nimport useWeb3 from 'hooks/useWeb3';\r\nimport { getContract } from 'utils/web3';\r\nimport { symbol } from 'utils/symbol';\r\nimport { getBalanceNumber } from 'utils/formatBalance';\r\nimport { decimal } from 'utils/decimal';\r\n\r\n\r\nconst initData = {\r\n    pre_heading: \"Auctions\",\r\n    heading: \"Live Auctions\",\r\n    content: \"Lorem ipsum dolor sit amet, consectetur adipisicing elit. Laborum obcaecati dignissimos quae quo ad iste ipsum officiis deleniti asperiores sit.\",\r\n    btnText: \"Load More\"\r\n}\r\n\r\n\r\n\r\nfunction Collection() {\r\n    const { collection } = useParams();\r\n    const [auctions, setAuction] = useState([]);\r\n    //const tokens = useSelector((state: RootStateOrAny) => state.marketplace.items)\r\n    //const auctions = tokens.filter(token =>token.contract === collection);\r\n    const dispatch = useDispatch();\r\n    const {account} = useWallet();\r\n    const KaiECO721Contract = useKaiECOERC721Contract(collection);\r\n    const marketplaceContract = useKaiECOMarketplaceContract(getKaiECOMarketplaceAddress());\r\n    const [contents, setContents] = useState(initData);\r\n    const [tokenData, setTokenData] = useState([]);\r\n    const [bidPrice, setBidPrice] = useState(0);\r\n    \r\n\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            let tokens = await marketplaceContract.methods.viewItemsByCollection(collection).call();\r\n            console.log(\"tokens\",tokens);\r\n           \r\n            let assets = await Promise.all(tokens.itemInfo.map(async(item, index) => {\r\n               \r\n                let token = await KaiECO721Contract.methods.getTokenData(tokens.tokenIds[index]).call();\r\n                console.log(token);\r\n                let asset = {\r\n                    id : token.id,\r\n                    price : item.price,\r\n                    seller : item.seller,\r\n                    contract : item.coin,\r\n                    uri : `https://ipfs.io/ipfs/${token.uri}`,\r\n                    collectionId : item.collectionId,\r\n                    name : token.name,\r\n                    description : token.description\r\n                }\r\n                \r\n                return asset;\r\n            }));\r\n            console.log(assets);\r\n            setAuction(assets);\r\n          }\r\n          loadData()\r\n          \r\n    },[])\r\n    useEffect(() => {\r\n        const loadData = async () => {\r\n            let tokens = await marketplaceContract.methods.viewItemsByCollection(collection).call();\r\n            let assets = await Promise.all(tokens.itemInfo.map(async(item, index) => {\r\n                let token = await KaiECO721Contract.methods.getTokenData(tokens.tokenIds[index]).call();\r\n                let asset = {\r\n                    id : token.id,\r\n                    price : item.price,\r\n                    seller : item.seller,\r\n                    contract : item.coin,\r\n                    uri : `https://ipfs.io/ipfs/${token.uri}`,\r\n                    collectionId : item.collectionId,\r\n                    name : token.name,\r\n                    description : token.description\r\n                }\r\n                \r\n                return asset;\r\n            }));\r\n            console.log(assets);\r\n            setAuction(assets);\r\n          }\r\n          loadData()\r\n          const interval = setInterval(() => {\r\n            loadData()\r\n          }, 20000);\r\n          return () => clearInterval(interval);\r\n    },[])\r\n    const SetItemData = (contract, tokenId) => {\r\n        let data = auctions.filter(token => token.contract === contract).find(token => token.tokenId === tokenId);\r\n        setTokenData(data);\r\n    }\r\n    \r\n    return(\r\n        <section className=\"live-auctions-area\">\r\n            <div id=\"PlaceOnBid\" className=\"modal fade p-0\" >\r\n                <div className=\"modal-dialog dialog-animated\">\r\n                    <div className=\"modal-content h-100\">\r\n                        <div className=\"modal-header\" data-dismiss=\"modal\">\r\n                            Place On Bid <i className=\"far fa-times-circle icon-close\" />\r\n                        </div>\r\n                        <div className=\"menu modal-body\">\r\n                            <div className=\"row align-self-center\">\r\n\r\n                                <div className=\"col-12\">\r\n                                    <div className=\"form-group\">\r\n                                        <input type=\"number\" className=\"form-control\" name=\"name\" placeholder=\"Bid Price\" required={true} onChange={e => setBidPrice(parseInt(e.target.value))} />\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-12\">\r\n                        {/* Intro */}\r\n                        <div className=\"intro d-flex justify-content-between align-items-end m-0\">\r\n                            <div className=\"intro-content\">\r\n                                <span>{contents.pre_heading}</span>\r\n                                <h3 className=\"mt-3 mb-0\">{contents.heading}</h3>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row items\">\r\n                    {auctions?.map((item, idx) => {\r\n                        return (\r\n                            \r\n                            <div key={`auct_${idx}`} className=\"col-12 col-sm-6 col-lg-3 item\">\r\n                                <div className=\"card\">\r\n                                    <div className=\"image-over\">\r\n                                        <Link to={`/token/${collection}/${item.id}`}><img className=\"card-img-top\" src={item?.uri} alt=\"\" /></Link> \r\n                                    </div>\r\n                                    {/* Card Caption */}\r\n                                    <div className=\"card-caption col-12 p-0\">\r\n                                        {/* Card Body */}\r\n                                        <div className=\"card-body\">\r\n                                            \r\n                                            <Link to={`/token/${collection}/${item?.id}`}>\r\n                                                <h5 className=\"mb-0\">{item.name}</h5>\r\n                                            </Link>\r\n                                           \r\n                                            <a className=\"seller d-flex align-items-center my-3\" href=\"/author\">\r\n                                                <img className=\"avatar-sm rounded-circle\" src={'/img/user.jpg'} alt=\"\" />\r\n                                                <span className=\"ml-2\">{PadWalletAddress(item?.seller)}</span>\r\n                                            </a>\r\n                                            <div className=\"card-bottom d-flex justify-content-between\">\r\n                                                <span>{getBalanceNumber(item?.price, decimal(item?.contract))} {symbol(item?.contract)}</span>\r\n                                                <span>{1}</span>\r\n                                            </div>\r\n                                            \r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n                {/* <div className=\"row\">\r\n                    <div className=\"col-12 text-center\">\r\n                        <a id=\"load-btn\" className=\"btn btn-bordered-white mt-5\" href=\"#\">{initData.btnText}</a>\r\n                    </div>\r\n                </div> */}\r\n            </div>\r\n            <ToastContainer />\r\n        </section>\r\n    )\r\n}\r\n\r\n\r\nexport default Collection;","import Breadcrumb from 'components/Breadcrumb/Breadcrumb';\r\nimport React from 'react'\r\nimport CollectionComponent from '../../components/Collection/Collection'\r\nfunction Collection(props) {\r\n    return(\r\n        <>\r\n            <Breadcrumb title=\"Collections\" subpage=\"Pages\" page=\"Login\" />\r\n            <CollectionComponent />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Collection;","import { tokens } from \"constants/tokens\"\r\n\r\nexport const symbol = (address) => {\r\n    if(tokens.busd.address === address){\r\n        return tokens.busd.symbol;\r\n    }else if(tokens.Nutgain.address === address){\r\n        return tokens.Nutgain.symbol;\r\n    }else{\r\n        return tokens.bnb.symbol\r\n    }\r\n}","import { tokens } from \"constants/tokens\"\r\n\r\nexport const decimal = (address) => {\r\n    if(tokens.busd.address === address){\r\n        return tokens.busd.decimal;\r\n    }else if(tokens.Nutgain.address === address){\r\n        return tokens.Nutgain.decimal;\r\n    }else{\r\n        return tokens.bnb.decimal\r\n    }\r\n}"],"sourceRoot":""}